{"version":3,"sources":["components/TodoBar.js","components/TodoItem.js","components/TodoList.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["TodoBar","props","text","onChange","onClick","Grid","container","justify","item","xs","name","required","placeholder","value","e","target","Button","color","TodoItem","todo","id","onDoneChange","onDeleteClick","ListItem","ListItemIcon","Checkbox","checked","done","ListItemText","className","ListItemSecondaryAction","TodoList","todos","list","map","i","List","dense","Header","emptyTodo","App","useState","setTodos","newTodo","setNewTodo","Object","assign","handleBarChange","newTodos","slice","push","handleBarClick","idx","index","handleDoneChange","splice","handleDeleteClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ThemeProvider","theme","webbedsMUITheme","document","getElementById"],"mappings":"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","file":"static/js/main.569ff193.chunk.js","sourcesContent":["import React from 'react';\r\nimport { InputTextField } from '@webbeds/react/components/forms';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoBar = (props) => {\r\n    var { text, onChange, onClick } = props;\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={8}>\r\n                <InputTextField\r\n                    name='todo'\r\n                    required\r\n                    placeholder='Type a new TODO'\r\n                    value={text}\r\n                    onChange={(e) => onChange(e.target.value)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <Button color='primary' onClick={() => onClick()}>Add</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nTodoBar.propTypes = {\r\n    /** new todo's text */\r\n    text: PropTypes.string,\r\n    /** textfield handler */\r\n    onChange: PropTypes.func,\r\n    /** add button's handler */\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nexport default TodoBar;","import React from 'react';\r\nimport '../App.css';\r\nimport { Checkbox, Button, ListItem, ListItemIcon, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoItem = (props) => {\r\n    var { todo, id, onDoneChange, onDeleteClick } = props;\r\n    return (\r\n        <ListItem id={id}>\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    checked={todo.done}\r\n                    onChange={() => onDoneChange(id)}\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemText className={todo.done ? 'done-todo' : ''}>{todo.text}</ListItemText>\r\n            <ListItemSecondaryAction>\r\n                <Button onClick={() => onDeleteClick(id)}>X</Button>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n};\r\n\r\nTodoItem.propTypes = {\r\n    /** todo task */\r\n    todo: PropTypes.object,\r\n    /** task id */\r\n    id: PropTypes.number,\r\n    /** delete button handler */\r\n    onDeleteClick: PropTypes.func,\r\n    /** done checkbox handler */\r\n    onDoneChange: PropTypes.func,\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from '../components/TodoItem';\r\nimport { Grid, List } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoList = (props) => {\r\n    var { todos, onDoneChange, onDeleteClick } = props;\r\n    const list = todos.map((todo, i) => {\r\n        return (<TodoItem\r\n            key={i}\r\n            id={i}\r\n            todo={todo}\r\n            onDoneChange={onDoneChange}\r\n            onDeleteClick={onDeleteClick}\r\n        />)\r\n    });\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={8}>\r\n                <List dense>\r\n                    {list}\r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nTodoList.propTypes = {\r\n    /** list of todo tasks */\r\n    todos: PropTypes.array,\r\n    /** done checkbox handler */\r\n    onDoneChange: PropTypes.func,\r\n    /** delete button handler */\r\n    onDeleteClick: PropTypes.func,\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    const title = 'TODO List';\r\n    return <h2>{title}</h2>\r\n    \r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport TodoBar from './components/TodoBar';\r\nimport TodoList from './components/TodoList';\r\nimport Header from './components/Header';\r\n\r\nconst emptyTodo = {\r\n  done: false,\r\n  text: '',\r\n};\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState(emptyTodo);\r\n\r\n  const handleBarChange = (text) => {\r\n    var newTodo = Object.assign({}, emptyTodo, { text });\r\n\r\n    setNewTodo(newTodo);\r\n  }\r\n\r\n  const handleBarClick = () => {\r\n    var newTodos = todos.slice();\r\n    newTodos.push(newTodo);\r\n\r\n    setTodos(newTodos);\r\n    setNewTodo(emptyTodo);\r\n  }\r\n\r\n  const handleDoneChange = (index) => {\r\n    var newTodos = todos.slice();\r\n    newTodos[index].done = !newTodos[index].done;\r\n\r\n    setTodos(newTodos);\r\n  }\r\n\r\n  const handleDeleteClick = (index) => {\r\n    var newTodos = todos.slice();\r\n    newTodos.splice(index, 1); //remove 1 element from index position\r\n\r\n    setTodos(newTodos);\r\n  }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <TodoBar\r\n          onChange={(e) => handleBarChange(e)}\r\n          onClick={() => handleBarClick()}\r\n          text={newTodo.text}\r\n        />\r\n        <TodoList\r\n          todos={todos}\r\n          onDoneChange={(idx) => handleDoneChange(idx)}\r\n          onDeleteClick={(idx) => handleDeleteClick(idx)}\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { webbedsMUITheme } from '@webbeds/react/theme/mui-theme'\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={webbedsMUITheme}>\r\n      <App />\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}